/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2015-12-17 17:07:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("\t<title>Test Page</title>\r\n");
      out.write("\t\r\n");
      out.write("\t");
 String static_path = request.getContextPath(); 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print( static_path );
      out.write("/Csses/semantic.min.css\">\r\n");
      out.write("    <script src=\"");
      out.print( static_path );
      out.write("/Javascripts/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print( static_path );
      out.write("/Javascripts/semantic.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("   body {\r\n");
      out.write("     background-color: #DADADA;\r\n");
      out.write("   }\r\n");
      out.write("   #main {\r\n");
      out.write("     width: 450px;\r\n");
      out.write("   }\r\n");
      out.write("   #page {\r\n");
      out.write("     margin-top: 20px;\r\n");
      out.write("   }\r\n");
      out.write("  </style>\r\n");
      out.write("  <div id =\"page\" class=\"ui middle aligned center aligned grid\">\r\n");
      out.write("    <div id=\"main\" class=\"cloumn\">\r\n");
      out.write("      <h2 class=\"ui header\">\r\n");
      out.write("        <i class=\"ui users icon\"></i>\r\n");
      out.write("        <div class=\"content\">\r\n");
      out.write("          Login\r\n");
      out.write("          <div class=\"sub header\">XueOnline</div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </h2>\r\n");
      out.write("      <div class=\"ui stacked segment\">\r\n");
      out.write("        <div class=\"field\">\r\n");
      out.write("          <div class=\"ui left icon input\">\r\n");
      out.write("            <i class=\"user icon\"></i>\r\n");
      out.write("            <input name=\"username\" placeholder=\"your user name\" type=\"text\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"field\">\r\n");
      out.write("          <div class=\"ui left icon input\">\r\n");
      out.write("            <i class=\"lock icon\"></i>\r\n");
      out.write("            <input name=\"password\" placeholder=\"your password\" type=\"password\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <button class=\"ui fluid blue submit button\" type=\"submit\">Login</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"ui error message\">\r\n");
      out.write("        <p>{{ errormsg }}</p>\r\n");
      out.write("      </div>\r\n");
      out.write("          </form>\r\n");
      out.write("          <div class=\"ui icon message\">\r\n");
      out.write("            <i class=\"add user icon\"></i>\r\n");
      out.write("            <div class=\"content\">\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
